plugins {
    id 'java-library'
    id 'maven-publish'
//    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0-rc-1'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

dependencies {
    api 'org.slf4j:slf4j-api:2.0.2'
    api 'org.springframework:spring-context:6.0.10'
    api 'org.springframework:spring-tx:6.0.10'
    api 'org.springframework.data:spring-data-commons:3.1.0'
    api 'org.apache.commons:commons-lang3:3.1'
    api 'joda-time:joda-time:2.12.5'
    api 'org.apache.solr:solr-solrj:9.4.0'
    api 'org.apache.solr:solr-core:9.4.0'
    api 'com.google.code.findbugs:jsr305:3.0.2'
    api 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    api 'org.slf4j:slf4j-api:2.0.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.springframework:spring-test:6.0.10'
    testImplementation 'ch.qos.logback:logback-classic:1.4.1'
    testImplementation 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.apache.solr:solr-langid:8.7.0'
    testImplementation 'org.apache.geronimo.specs:geronimo-jcdi_2.0_spec:1.0.1'
    testImplementation 'jakarta.interceptor:jakarta.interceptor-api:2.1.0'
    testImplementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    testImplementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    testImplementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'javax.validation:validation-api:2.0.1.Final'
    testImplementation 'org.apache.openwebbeans:openwebbeans-se:2.0.27'
    testImplementation 'org.springframework:spring-jdbc:6.0.10'
    testImplementation 'com.h2database:h2:1.3.168'
    testImplementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.springframework:spring-test:6.0.10'
    testImplementation 'ch.qos.logback:logback-classic:1.4.1'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    compileOnly 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1'
}

group = 'com.ksahu750.solr'
archivesBaseName = 'spring-data-solr'
version = '5.2.0'
description = 'Spring Data Solr - Support to spring-framework 6'
java.sourceCompatibility = JavaVersion.VERSION_17

java {
    withSourcesJar()
//    withJavadocJar()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//tasks.withType(Javadoc) {
//    options.encoding = 'UTF-8'
//}

publishing {
    publications {

        mavenJava(MavenPublication) {
            from(components["java"])
            pom {

                afterEvaluate {
                    name = project.description
                    description = project.description
                }
                url = 'https://github.com/ksahu750/spring-data-solr'

                licenses {
                    license {
                        name = "Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0"
                    }
                }
                developers {
                    developer {
                        id = 'ksahu750'
                        name = 'Kunal Sahu'
                        email = 'ksahu750gmail.com'
                    }
                    developer {
                        id = 'ChrisDeFer'
                        name = 'Christopher Young'
                        email = 'christopher.young@ynap.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/ksahu750/spring-data-solr.git'
                    developerConnection = 'scm:git:git://github.com/ksahu750/spring-data-solr.git'
                    url = 'https://github.com/ksahu750/spring-data-solr'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
        }
    }
}

//signing {
//    def signingKey = findProperty("signingKey")
//    def signingPassword = findProperty("signingPassword")
//    useInMemoryPgpKeys(signingKey, signingPassword)
//    sign publishing.publications.mavenJava
//}

